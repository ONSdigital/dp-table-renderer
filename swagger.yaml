swagger: "2.0"
info:
  description: "An API used to customise and submit queries (filters) against a given dataset. Once the filter blueprint has been created it can then be updated with dimension-specific filters that apply to that dataset. Once all the required filters have been applied to the blueprint, it is expected that the client will send a Put request with query parameter `submitted` set to `true` to indicate that processing can begin; this request will result in a filter output resource to be created, copying the data from the blueprint and setting a status of created. The response for this request will give a link to the created filter output document. Once processing has been started the filter output resource will only be updated by authorised requests. Finally, the state will be marked as completed with a complete list of downloads (or failed)."
  version: "1.0.0"
  title: "Filter API"
  license:
    name: "Open Government Licence v3.0"
    url: "http://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
basePath: "/v1"
tags:
- name: "Public"
  description: "Used to filter published datasets"
- name: "Private"
  description: "Used to update filter outputs for a published dataset"
schemes:
- "http"
parameters:
  filter_id:
    name: filter_id
    type: string
    required: true
    description: "The unique filter ID for customising a dataset"
    in: path
  filter_output_id:
    name: filter_output_id
    type: string
    required: true
    description: "The unique filter outer ID for customising a dataset"
    in: path
  limit:
    name: limit
    type: integer
    description: "Limit the number of rows returned in a preview. Defaults to 20 and capped at 100"
    in: query
  name:
    name: name
    type: string
    required: true
    description: "The name of a dimension"
    in: path
  option:
    name: option
    type: string
    required: true
    description: "The single option for a dimension"
    in: path
  dimension:
    name: dimension
    schema:
      $ref: '#/definitions/Dimension'
    required: true
    description: "A dimension to filter the dataset"
    in: body
  options:
    required: false
    name: options
    schema:
      $ref: '#/definitions/Options'
    description: "A list of options for a dimension to filter the dataset"
    in: body
  new_filter_blueprint:
    name: filter_blueprint
    schema:
      $ref: '#/definitions/NewBlueprintRequest'
    required: true
    description: "Model of all editable properties within a filter blueprint"
    in: body
  update_filter_output:
    name: filter_output
    schema:
      $ref: '#/definitions/UpdateOutputRequest'
    required: true
    description: "Model of all editable properties within a filter output"
    in: body
  submitted:
    name: submitted
    description: "A flag to indicate the submission of a filter blueprint"
    in: query
    type: boolean
  update_filter:
    name: filter
    schema:
      $ref: '#/definitions/UpdateBlueprintRequest'
    required: true
    description: "Model of all editable properties within a filter blueprint"
    in: body
securityDefinitions:
  InternalAPIKey:
    name: internal-token
    description: "API key used to allow only internal services to update the state of an import job"
    in: header
    type: apiKey
paths:
  /filters:
    post:
      tags:
      - "Public"
      summary: "Create a filter for a dataset"
      description: "Create a blueprint for listing a selection of dimensions and dimension options to be added to filter for a dataset"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/new_filter_blueprint'
      responses:
        201:
          description: "filter blueprint was created"
          schema:
            $ref: '#/definitions/NewBlueprintResponse'
        400:
          description: "Invalid request body"
        500:
          $ref: '#/responses/InternalError'
  /filters/{filter_id}:
    parameters:
      - $ref: '#/parameters/filter_id'
    get:
      tags:
      - "Public"
      summary: "Get a blueprint of a filter"
      description: "Get document describing the filter"
      produces:
      - "application/json"
      responses:
        200:
          description: "The filter blueprint was found and document is returned"
          schema:
            $ref: '#/definitions/NewBlueprintResponse'
        404:
           $ref: '#/responses/FilterNotFound'
        500:
          $ref: '#/responses/InternalError'
    put:
      tags:
      - "Public"
      summary: "Update blueprint of a filter"
      description: |
        Update the filter by providing new properties
      parameters:
      - $ref: '#/parameters/submitted'
      - $ref: '#/parameters/update_filter'
      responses:
        200:
          description: "The filter job has been updated"
          schema:
            $ref: '#/definitions/UpdateBlueprintResponse'
        400:
          description: "Invalid request body"
        404:
          $ref: '#/responses/FilterNotFound'
        422:
          description: "Unprocessable entity - instance has been removed"
        500:
          $ref: '#/responses/InternalError'
  /filters/{filter_id}/dimensions:
    get:
      tags:
       - "Public"
      summary: "Get all dimensions used by this filter blueprint"
      description: |
        Return a list of all dimensions which are going to be used to filter on
      parameters:
      - $ref: '#/parameters/filter_id'
      responses:
        200:
          description: "A list of dimension URLs"
          schema:
            type: array
            items:
              $ref: '#/definitions/Dimension'
        404:
          $ref: '#/responses/FilterNotFound'
        500:
          $ref: '#/responses/InternalError'
  /filters/{filter_id}/dimensions/{name}:
    parameters:
      - $ref: '#/parameters/filter_id'
      - $ref: '#/parameters/name'
    get:
      tags:
      - "Public"
      summary: "Check if a dimension exists within a filter blueprint"
      description: "Check if a dimension exists within a filter blueprint"
      responses:
        204:
          description: "Dimension exists for filter"
        400:
          description: "Filte was not found"
        404:
          description: "Dimension name was not found"
        500:
          $ref: '#/responses/InternalError'
    post:
      tags:
      - "Public"
      summary: "Add a dimension to filter blueprint on with a list of options"
      description: "Add a dimension to filter blueprint on with a list of options"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/options'
      responses:
        201:
          description: "The dimension was created"
        400:
          description: "Invalid request body"
        404:
          description: "Filter job was not found"
        422:
          description: "Unprocessable entity - instance has been removed"
        500:
          $ref: '#/responses/InternalError'
    delete:
      tags:
      - "Public"
      summary: "Remove a dimension and any options set within the dimension"
      description: "Remove a dimension and any options set within the dimension"
      responses:
        200:
          description: "The dimension was removed"
        400:
          description: "Filter blueprint was not found"
        404:
          description: "Dimension name was not found"
        500:
          $ref: '#/responses/InternalError'
  /filters/{filter_id}/dimensions/{name}/options:
    parameters:
      - $ref: '#/parameters/filter_id'
      - $ref: '#/parameters/name'
    get:
      tags:
      - "Public"
      summary: "Get all options from a dimension which have been set"
      description: "Get a list of all options which will be used to filter the dimension"
      responses:
        200:
          description: "A list of all options for a dimension was returned"
          schema:
            type: array
            items:
              $ref: '#/definitions/Option'
        400:
          description: "Filter blueprint was not found"
        404:
          description: "Dimension name was not found"
        500:
          $ref: '#/responses/InternalError'
  /filters/{filter_id}/dimensions/{name}/options/{option}:
    parameters:
      - $ref: '#/parameters/filter_id'
      - $ref: '#/parameters/name'
      - $ref: '#/parameters/option'
    get:
      tags:
      - "Public"
      summary: "Check if a option exists within a dimension"
      description: "Check if a option exists within a dimension"
      responses:
        204:
          description: "Option exists within the dimension"
        400:
          $ref: '#/responses/FilterOrDimensionNotFound'
        404:
          description: "Dimension option was not found"
        500:
          $ref: '#/responses/InternalError'
    post:
      tags:
      - "Public"
      summary: "Add an option to a dimension of a filter blueprint"
      description: "Add an option to a dimension of a filter blueprint"
      responses:
        201:
          description: "Option was added"
        400:
          description: "Filter blueprint was not found"
        404:
          description: " Dimension name was not found"
        422:
          description: "Unprocessable entity - instance has been removed"
        500:
          $ref: '#/responses/InternalError'
    delete:
      tags:
      - "Public"
      summary: "Remove an option from a dimension"
      description: "Remove a single option from a dimension"
      responses:
        200:
          description: "Option was removed"
        400:
          description: |
            This error code could be one or more of:
            * Filter blueprint was not found
            * Dimension name was not found
        404:
          description: "Dimension option was not found"
        500:
          $ref: '#/responses/InternalError'
  /filter-outputs/{filter_id}:
    parameters:
      - $ref: '#/parameters/filter_id'
    get:
      tags:
      - "Public"
      summary: "Get a filter output"
      description: "Get document describing the filter output"
      produces:
      - "application/json"
      responses:
        200:
          description: "The filter output was found and document is returned"
          schema:
            $ref: '#/definitions/FilterOutputResponse'
        404:
           $ref: '#/responses/FilterOutputNotFound'
        500:
          $ref: '#/responses/InternalError'
    put:
      tags:
      - "Private"
      summary: "Update filter output with downloads and state"
      description: |
        Update the filter output state and to contain downloads
      parameters:
      - $ref: '#/parameters/update_filter_output'
      security:
      - InternalAPIKey: []
      responses:
        200:
          description: "The filter output has been updated"
        400:
          description: "Invalid request body"
        401:
          description: "Unauthorised, request lacks valid authentication credentials"
        403:
          description: "Forbidden, the filter output state has been set to `completed`, resource has a list of downloadable files"
        404:
          $ref: '#/responses/FilterOutputNotFound'
        500:
          $ref: '#/responses/InternalError'
  /filter-outputs/{filter_id}/preview:
    parameters:
      - $ref: '#/parameters/filter_id'
      - $ref: '#/parameters/limit'
    get:
      tags:
      - "Public"
      summary: "Get a preview of the output filter"
      description: "Get a preview of up to 100 observations using the state of the filter output job. By default only 20 rows will be returned. To change this use the `limit` query. It could be possible no results are returned due to data sparsity."
      produces:
      - "application/json"
      responses:
        200:
          description: "A preview of the current filter state has been returned"
          schema:
            $ref: '#/definitions/Preview'
        400:
          description: "No dimensions are present in the filter output"
        404:
          description: "The filter id was not found"
        500:
          $ref: '#/responses/InternalError'
responses:
  FilterNotFound:
    description: "Filter blueprint not found"
  FilterOutputNotFound:
    description: "Filter output not found"
  FilterOrDimensionNotFound:
    description: "Filter blueprint or dimension name not found"
  InternalError:
    description: "Failed to process the request due to an internal error"
definitions:
  FilterOutputResponse:
    description: "A model for the response body when retrieving a filter output"
    allOf:
    - type: object
      properties:
        downloads:
          $ref: '#/definitions/Downloads'
    - $ref: '#/definitions/JobState'
  NewBlueprintRequest:
    description: "A model used to create new filter blueprints. Dimensions are optional"
    allOf:
    - $ref: '#/definitions/JobState'
    - type: object
      properties:
        dimensions:
          readOnly: false
          type: array
          description: "A list of dimensions in the filter job"
          items:
             $ref: '#/definitions/DimensionOptions'
  UpdateBlueprintRequest:
    description: "A model used to update filter blueprints. Dimensions are optional, while downloads and events are for internal use only."
    allOf:
    - $ref: '#/definitions/JobState'
    - type: object
      properties:
        events:
          readOnly: false
          type: object
          description: |
            A list of events which happened to the blueprint, can only be updated if authorised.
          items:
            $ref: '#/definitions/Events'
  NewBlueprintResponse:
    description: "A model for the response body when creating a new filter blueprint"
    allOf:
    - $ref: '#/definitions/JobState'
    - type: object
  UpdateBlueprintResponse:
    description: "A model for the response body when updating a filter blueprint"
    allOf:
    - $ref: '#/definitions/JobState'
    - type: object
      properties:
        links:
          type: object
          properties:
            filter_output:
              description: "A link object containing the url to the filter output document, this is only returned once the submitted query parameter is set to true."
              type: object
              properties:
                href:
                  description: "A URL to the filter output document"
                  example: "http://localhost:8080/filter-outputs/95c4669b-3ae9-4ba7-b690-87e890a1c543"
                  type: string
                id:
                  description: "An ID of the created filter output document"
                  example: "95c4669b-3ae9-4ba7-b690-87e890a1c543"
                  type: string
  UpdateOutputRequest:
    description: "A model used to update filter outputs. Only the downloads list and state are editable"
    type: object
    properties:
      state:
        type: string
        description: |
          The state of the job can be in five states;
          * created - The job is ready to be updated with filters. (default state)
          * submitted - The job has been submitted to be processed. This will lock the job and no further changes can be done
          * in progress -
          * completed - The job has been completed and can be downloaded using the `downloadUrl`
          * failed - The job failed to be processed
      downloads:
        $ref: '#/definitions/Downloads'
      events:
        $ref: '#/definitions/Events'
  JobState:
    description: |
      A description of a job to generate a customised dataset
    type: object
    required: ["instance_id"]
    properties:
      filter_id:
        readOnly: true
        type: string
        description: "A unique id for this resource"
      instance_id:
        type: string
        description: 'An instance ID for he specific dataset version to be filtered'
      dimension_list_url:
        readOnly: true
        type: string
        description: "A url that lists all dimensions currently set for filter"
      links:
        $ref: '#/definitions/FilterLinks'
      events:
        $ref: '#/definitions/Events'
  Dimension:
    type: object
    description: "A dimension to filter on a dataset. Information on a dimension can be gathered using the `Dataset API`"
    properties:
      name:
        type: string
        description: "The name of the dimension to filter on"
      dimension_url:
        type: string
        description: "A link to the filtered options within the dimension"
        items:
          type: string
          example: "/filters/00001/dimensions/age"
  DimensionOptions:
    type: object
    description: "A dimension to filter on a dataset. Information on a dimension can be gathered using the `Dataset API`"
    properties:
      name:
        type: string
        description: "The name of the dimension to filter on"
      options:
        type: array
        description: "A list of options for dimension to filter on a dataset"
        items:
          type: string
  Downloads:
    type: object
    description: |
      The url to download the customised dataset. This will be blank until the jobs `state` has been marked completed and can only be updated if authorised
    properties:
      xls:
        $ref: '#/definitions/DownloadFile'
      json:
        $ref: '#/definitions/DownloadFile'
      csv:
        $ref: '#/definitions/DownloadFile'
  Option:
    type: object
    description: "An option for a dimension to filter on a dataset. Information on a dimension option can be gathered using the `Dataset API`"
    properties:
      dimension_option_url:
        type: string
        description: "A link to a filtered dimension option"
      option:
        type: string
        description: "The filtered dimension option"
  Options:
    type: object
    description: "A list of options for dimension to filter on a dataset"
    properties:
      options:
        type: array
        description: "A list of options for dimension to filter on a dataset"
        items:
          type: string
  Events:
    type: object
    description: |
      A list of events which happened to the resource, can only be updated if authorised.
    properties:
      info:
        type: array
        items:
          $ref: '#/definitions/Event'
      error:
        type: array
        items:
          $ref: '#/definitions/Event'
  Event:
    type: object
    description: "A description of an event which has happened to the resource"
    properties:
      time:
        type: string
        description: "The time of the event happened"
      type:
        type: string
        description: "The type of event which happened"
      message:
        type: string
        description: "The description of the event which has happened"
  DownloadFile:
    type: object
    properties:
      url:
        type: string
        description: "The URL to the generated file"
      size:
        type: string
        description: "The size of the file in bytes"
  FilterLinks:
    description: "A list of links related to this resource"
    readOnly: true
    type: object
    properties:
      version:
        type: object
        properties:
          href:
            description: "A URL to the version being filtered"
            example: "http://localhost:8080/datasets/DE3BC0B6-D6C4-4E20-917E-95D7EA8C91DC/editions/2017/version/1"
            type: string
          id:
            description: "An ID of the version being filtered"
            example: "de3bc0b6-d6c4-4e20-917e-95d7ea8c91dc"
            type: string
      preview:
        type: object
        properties:
          href:
            description: "A URL to a preview of the filter output"
            example: "http://localhost:8080/filter-outputs/DE3BC0B6-D6C4-4E20-917E-95D7EA8C91DC/preview"
            type: string
  Preview:
    description: "A preview of the current filter state"
    readOnly: true
    type: object
    properties:
      headers:
        description: "A list of all headers in the dataset"
        type: array
        items:
          type: string
      number_of_rows:
        description: "The number of rows, this can be in the range of 0 - 20"
        type: integer
      number_of_columns:
        description: "The number of columns"
        type: integer
      rows:
        description: "A list of all rows for the preview as a two dimensional array"
        type: array
        items:
          type: array
          items:
            type: string
